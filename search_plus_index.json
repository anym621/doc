{"./":{"url":"./","title":"闪影","keywords":"","body":"闪影 导出JS文件相关简介：以下只介绍，如何使用闪影生成的js文件。 "},"mapthis.html":{"url":"mapthis.html","title":"类 Map/this","keywords":"","body":"Map/this的属性和方法 "},"mapthis/property.html":{"url":"mapthis/property.html","title":"属性","keywords":"","body":"类 Map/this的属性 "},"mapthis/property/maprect.html":{"url":"mapthis/property/maprect.html","title":"MapRect","keywords":"","body":"MapRect MapRect：地图大小宽高，以坐标旗为准。 "},"mapthis/function.html":{"url":"mapthis/function.html","title":"方法","keywords":"","body":"类 Map/this的方法 "},"mapthis/function/setlocationfun.html":{"url":"mapthis/function/setlocationfun.html","title":"setLocationFun","keywords":"","body":"setLocationFun setLocationFun(X：Number=null，Y：Number=null，图层名：String=’this‘) 描述： 更改主Node的XY，可以单纯 填 写X或Y之一属性，默认为null，代表不会更改。 第三个参数代表要移动的图层名，要与黑小孩中所设置的图层名一 致 （注意黑小孩默认的图层名为“图[空格]层[空格]1”），如果不填写默认为“this”，代表整个移动。 此方法只能在Init方法之后才能生效，如果想在之前更改XY属性，可以在 黑小孩中设置坐标旗，或者直接更改主Node属性。 示例： setLocationFun(0,0,'图层1'); "},"mapthis/function/init.html":{"url":"mapthis/function/init.html","title":"Init","keywords":"","body":"Init Init() 描述： 程序准备完成后执行。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.Init=function(){cc.log(‘地图准备就绪’);} "},"mapthis/function/loading.html":{"url":"mapthis/function/loading.html","title":"Loading","keywords":"","body":"Loading Loading(已加载的贴图数：Number，总贴图数：Number) 描述： 加载素材的进度。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.Loading=function(Loaded,Total){ cc.log(Loaded/Total*100); } "},"mapthis/function/onloadymovieclip.html":{"url":"mapthis/function/onloadymovieclip.html","title":"onLoadYMovieClip","keywords":"","body":"onLoadYMovieClip onLoadYMovieClip(动画：YMovieClip，图层名：String，是否第一次加载：bool) 描述： 每次动画加载时调用，第三个参数为第一次调用，也就是只有在该动画第一次出现在舞台时才为true,其他时间为false。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.onLoadYMovieClip=function(ymc,LayerName,bo){ //要处理的内容 } "},"mapthis/function/onloadsprite.html":{"url":"mapthis/function/onloadsprite.html","title":"onLoadSprite","keywords":"","body":"onLoadSprite onLoadSprite(图块：Node，图层名：String) 描述： 每次图块添加到舞台时调用。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.onLoadSprite=function(n,LayerName){ //要处理的内容 } "},"mapthis/function/onloadspriteparent.html":{"url":"mapthis/function/onloadspriteparent.html","title":"onLoadSpriteParent","keywords":"","body":"onLoadSpriteParent onLoadSpriteParent(父节点：Node，图层名：String，是否第一次加载：bool) 描述： 每次父节点添加到舞台时调用，第三个参数为是否第一次加载。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.onLoadSpriteParent=function(n,LayerName,bo){ //要处理的内容 } "},"mapthis/function/killymovieclip.html":{"url":"mapthis/function/killymovieclip.html","title":"killYMovieClip","keywords":"","body":"killYMovieClip killYMovieClip(动画：YMovieClip，图层名：String) 描述： 每次动画从舞台上清除时调用。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.killYMovieClip=function(ymc,LayerName){ //要处理的内容 } "},"mapthis/function/killsprite.html":{"url":"mapthis/function/killsprite.html","title":"killSprite","keywords":"","body":"killSprite killSprite(图块：Node，图层名：String) 描述： 每次图块从舞台上清除时调用。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.killSprite=function(n,LayerName){ //要处理的内容 } "},"mapthis/function/killspriteparent.html":{"url":"mapthis/function/killspriteparent.html","title":"killSpriteParent","keywords":"","body":"killSpriteParent killSpriteParent(父图块：Node，图层名：String) 描述： 每次图块父节点从舞台上清除时调用。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.killSpriteParent=function(n,LayerName){ //要处理的内容 } "},"mapthis/function/setspriteframe.html":{"url":"mapthis/function/setspriteframe.html","title":"setSpriteFrame","keywords":"","body":"setSpriteFrame setSpriteFrame(路径：String，贴图名：String，贴图：SpriteFrame) 描述： 将地图中某一贴图替换成相关贴图。注意：此方法只会改变地图中的图块贴图，并不会适配贴图大小，所以更改的贴图尽量与原贴图大小保持一致。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); //替换Image文件夹下的d1贴图 this.mapjs.setSpriteFrame(“image”,”d1”,spriteFrame); //替换Image文件夹下Tile图集中的d1贴图 this.mapjs.setSpriteFrame(“image/Tile”,”d1”,spriteFrame); "},"mapthis/function/getnodesbylocation.html":{"url":"mapthis/function/getnodesbylocation.html","title":"getNodesByLocation","keywords":"","body":"getNodesByLocation getNodesByLocation(图层名：String，X：Number，Y：Number)返回:Array 描述： 通过坐标得到相关的图块数组，这里坐标并不是以实际像素进行匹配，而是和图层高宽行列有关，比如图层地形是100*乘100的，通过坐标得到的，就是100*乘100的某行某列图块（注意：不管是地形图块，还是自由图块，都会占用一个或多个行列信息。） 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var arr=this.mapjs.getNodesByLocation(“图 层 1”,50,50); "},"mapthis/function/getnodeparentbyname.html":{"url":"mapthis/function/getnodeparentbyname.html","title":"getNodeParentByName","keywords":"","body":"getNodeParentByName getNodeParentByName(图块：Node)返回:Node 描述： 通过名字得到图块的地图父节点，但需要地图父节点必须在场景加载过，否则返回null。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var n=this.mapjs.getNodeParentByName(‘房子’); "},"mapthis/function/getnodeparentbysprite.html":{"url":"mapthis/function/getnodeparentbysprite.html","title":"getNodeParentBySprite","keywords":"","body":"getNodeParentBySprite getNodeParentBySprite(图块：Node)返回:Node 描述： 通过图块得到其地图父节点，如果图块没有地图父节点，则返回null，如果你确定该图块一定有地图父节点，也可以直接n.parent得到。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var arr=this.mapjs.getNodeParentBySprite(n); "},"mapthis/function/gettopnodebylocation.html":{"url":"mapthis/function/gettopnodebylocation.html","title":"getTopNodeByLocation","keywords":"","body":"getTopNodeByLocation getTopNodeByLocation(图层名：Node，X：Number，Y：Number)返回:Node 描述： 通过坐标返回某块区域内的最顶部的Node，这里坐标并不是以实际像素进行匹配，而是和图层高宽行列有关。比如图层地形是100*乘100的，通过坐标得到，就是100*乘100的某行某列图块（注意：不管是地形图块，还是自由图块，都会占用一个或多个行列信息。） 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var n=this.mapjs.getTopNodeByLocation(“图 层 1”,50,50); "},"mapthis/function/getlayerrectfun.html":{"url":"mapthis/function/getlayerrectfun.html","title":"getLayerRectFun","keywords":"","body":"getLayerRectFun getLayerRectFun\\(图层名：String\\)返回:cc.Rect 描述： 获得图层距离中心点的实际像素区域，注意getLayerRectFun返回为正常坐标系。即Y坐标向下为正，向上为负。如果要改成CC坐标，只需将Y*=-1即可，其他不变。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var rect=this.mapjs.getLayerRectFun(“图 层 1”); "},"mapthis/function/getlayernodefun.html":{"url":"mapthis/function/getlayernodefun.html","title":"getLayerNodeFun","keywords":"","body":"getLayerNodeFun getLayerNodeFun(图层名：String)返回:cc.Rect 描述： 获得地图中的图层Node。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var layerNode=this.mapjs.getLayerNodeFun(“图 层 1”); "},"mapthis/function/addmapnode.html":{"url":"mapthis/function/addmapnode.html","title":"addMapNode","keywords":"","body":"addMapNode addMapNode(图块：Node，图层名：String)返回:Boolean 描述： 向地图添加图块信息。注意：第一个参数的Node，并不是随意增加的Node，而是从地图取出带有特殊标记的Node。当Node增加成功时，实际是增加了一串地图信息，同时原Node会被销毁。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.addMapNode(n,”图 层 2”); "},"mapthis/function/removemapnode.html":{"url":"mapthis/function/removemapnode.html","title":"removeMapNode","keywords":"","body":"removeMapNode removeMapNode(图块：Node) 描述： 清除地图信息。此方法只是清除该图块在地图中的显示信息，并不会摧毁图块Node，且该图块的其他信息也会被保留下来，必要时可以通过addMapNode方法，进行增加更改。但是，动画图块除外，因为被清除的动画图块，无法独立运行，所以一旦被清除，会将其摧毁。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.removeMapNode(n); "},"mapthis/function/killnodepool.html":{"url":"mapthis/function/killnodepool.html","title":"killNodePool","keywords":"","body":"killNodePool killNodePool(上次使用时间/图块名：Number/String) 描述： 销毁Node池，参数可以是时间，也可以是指定图块名。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.killNodePool(60);//清除一分钟内没有使用的池 this.mapjs.killNodePool(“土地”);//清除叫土地的图块 "},"mapthis/function/removeall.html":{"url":"mapthis/function/removeall.html","title":"removeAll","keywords":"","body":"removeAll removeAll() 描述： 销毁所有。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.removeAll(); "},"mapthis/function/gettag.html":{"url":"mapthis/function/gettag.html","title":"getTag","keywords":"","body":"getTag getTag(标记：String)返回：Array 描述： 返回在闪影中设计的一组标记。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var arr=this.mapjs.getTag(tagStr); "},"mapthis/function/setmaplocation.html":{"url":"mapthis/function/setmaplocation.html","title":"setMapLocation","keywords":"","body":"setMapLocation setMapLocation(图块/ID：Node/Number，X：Number，Y：Number，图层名(选添)：String)返回：Array 描述： 移动地图图块，参数1可以是图块Node，也可以是图块ID，但是建议用图块ID。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.setMapLocation(n,10,15); "},"mapthis/function/getshownode.html":{"url":"mapthis/function/getshownode.html","title":"getShowNode","keywords":"","body":"getShowNode getShowNode(ID：Number) 描述： 除了得到图块Node，用此方法，也可以判断图块ID是否在显示界面之中，如果不在会返回null。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); var n=this.mapjs.getShowNode(id); "},"mapthis/function/setymovieclipframe.html":{"url":"mapthis/function/setymovieclipframe.html","title":"setYMovieClipFrame","keywords":"","body":"setYMovieClipFrame setYMovieClipFrame(ID：Number，帧：Number，播放Bo：Boolean) 描述： 用于控制动画跳帧，此方法不管动画对象是否在显示区域中，都可以使用。 第三个参数如果为true，将执行跳到并播放，否则执行跳到并停止。 注意：如果使用此方法控制某个从未加载的动画，那么该动画的onLoadYMovieClip方法中的，第一次加载Bo将为false。 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.setYMovieClipFrame(id，10，false); //将某一动画跳第十帧并停止 "},"mapthis/function/getmapnodeobj.html":{"url":"mapthis/function/getmapnodeobj.html","title":"getMapNodeObj","keywords":"","body":"getMapNodeObj getMapNodeObj(图块/ID：Node/Number，图层名(选添)：String) 描述： 得到地图数据，格式为{id:*,name:\"**\",LayerName:\"**\",x:*,y:*} 示例： this.mapjs=this.MapNode.getComponent(this.MapStr); this.mapjs.getMapNodeObj(id);//将某一动画跳第十帧并停止 "},"ymovieclip.html":{"url":"ymovieclip.html","title":"类 YMovieClip","keywords":"","body":"类 YMovieClip的属性和方法 "},"YMovieClip/YProperty.html":{"url":"YMovieClip/YProperty.html","title":"属性","keywords":"","body":"类 YMovieClip的属性 "},"YMovieClip/YProperty/currentframe.html":{"url":"YMovieClip/YProperty/currentframe.html","title":"currentFrame","keywords":"","body":"currentFrame currentFrame：当前帧。 "},"YMovieClip/YFunction.html":{"url":"YMovieClip/YFunction.html","title":"方法","keywords":"","body":"类 YMovieClip的方法 "},"YMovieClip/YFunction/stop.html":{"url":"YMovieClip/YFunction/stop.html","title":"stop","keywords":"","body":"stop stop() 描述： 暂停播放。 "},"YMovieClip/YFunction/play.html":{"url":"YMovieClip/YFunction/play.html","title":"play","keywords":"","body":"play play() 描述： 继续播放。 "},"YMovieClip/YFunction/gotoandstop.html":{"url":"YMovieClip/YFunction/gotoandstop.html","title":"gotoAndStop","keywords":"","body":"gotoAndStop gotoAndStop() 描述： 跳到指定帧并停止。 "},"YMovieClip/YFunction/gotoandplay.html":{"url":"YMovieClip/YFunction/gotoandplay.html","title":"gotoAndPlay","keywords":"","body":"gotoAndPlay gotoAndplay() 描述： 跳到指定帧并停止。 "},"YMovieClip/YFunction/seteventfun.html":{"url":"YMovieClip/YFunction/seteventfun.html","title":"setEventFun","keywords":"","body":"setEventFun setEventFun(帧：Number，要更改的事件名：String，事件方法：Function) 描述： 更改事件，前提是该帧上必须有事件，包括用黑小孩加的事件（这里有区别，用黑小孩加的事件，其实就是相当于，动画执行到某一帧之后dispatchEvent事件，用户只需要得到动画对象，然后ymc.on(“事件名”,Fun)，就可得到事件。但是使用setEventFun更改，或addEventFun增加事件，都是相当于将某一方法插入到某一帧上。弹出与插入式不同的，但是他们都能实现同一个目标，该怎么做取决于你）。 示例： ymc.setEventFun(5,”ADC”,function(){ //内容 }); "},"YMovieClip/YFunction/addeventfun.html":{"url":"YMovieClip/YFunction/addeventfun.html","title":"addEventFun","keywords":"","body":"addEventFun addEventFun(帧：Number，事件名：String，事件方法：Function) 描述： 增加或覆盖事件，如果帧上的事件是用黑小孩添加的，那么用addEventFun将会覆盖事件，原事件不会再弹出。 示例： ymc.addEventFun(5,”ADC”,function(){ //内容 }); "},"YMovieClip/YFunction/deletealleventfun.html":{"url":"YMovieClip/YFunction/deletealleventfun.html","title":"deleteAllEventFun","keywords":"","body":"deleteAllEventFun deleteAllEventFun(帧:Number) 描述： 删除帧上所有事件。 "},"YMovieClip/YFunction/deleteeventfun.html":{"url":"YMovieClip/YFunction/deleteeventfun.html","title":"deleteEventFun","keywords":"","body":"deleteEventFun deleteEventFun(帧：Number，事件名：String) 描述： 删除帧上某一事件。 "}}